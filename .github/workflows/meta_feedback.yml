name: AI Generated Meta-Feedback

on:
  workflow_dispatch:
    inputs:
      reason:
        description: "Selected"
        required: false
        default: "class-selected-run"

permissions:
  contents: write
  actions: read
  checks: read

concurrency:
  group: "meta-feedback-${{ github.ref }}"
  cancel-in-progress: true

jobs:
  meta_feedback:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Guard - only teacher can trigger
        run: |
          ALLOWED_ACTORS="Ruixi1313"
          if ! echo "$ALLOWED_ACTORS" | tr ' ' '\n' | grep -q "^${GITHUB_ACTOR}$"; then
            echo "Only teachers can run this workflow. Actor: ${GITHUB_ACTOR}"
            exit 1
          fi

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r scripts/requirements.txt

      - name: Generate meta-feedback with GPT
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_BASE_URL: ${{ secrets.OPENAI_BASE_URL }}
          OPENAI_MODEL: ${{ vars.OPENAI_MODEL }}
        run: |
          python scripts/generate_feedback.py

      - name: Commit & push feedback
        run: |
          echo "=== Configuring git ==="
          git config user.email "meta-feedback-bot@users.noreply.github.com"
          git config user.name "Meta-Feedback Bot"
          
          echo "=== Checking generated files ==="
          ls -la Meta-Feedback_*.md 2>/dev/null || echo "No feedback files found"
          ls -la .meta-feedback/state.json 2>/dev/null || echo "No state file found"
          
          echo "=== Adding files ==="
          git add Meta-Feedback_*.md .meta-feedback/state.json || true
          
          echo "=== Checking for changes ==="
          if git diff --staged --quiet; then
            echo "No changes to commit"
            exit 0
          fi
          
          echo "=== Committing changes ==="
          git commit -m "Teacher-triggered meta-feedback [skip ci]"
          
          echo "=== Fetching latest changes ==="
          git fetch origin
          
          echo "=== Rebasing onto remote branch ==="
          if git rebase origin/${{ github.ref_name }}; then
            echo "Rebase successful"
          else
            echo "Rebase failed, switching to merge strategy"
            git rebase --abort
            git pull --no-rebase origin ${{ github.ref_name }}
          fi
          
          echo "=== Pushing changes ==="
          git push origin HEAD:${{ github.ref_name }}
          
          echo "Feedback successfully pushed to repository"
